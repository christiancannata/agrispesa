jQuery(document).ready(function (t) { headingVariant = jQuery(".cmp-coming-soon-maintenance .headings-google-font-variant").val(), contentVariant = jQuery(".cmp-coming-soon-maintenance .content-google-font-variant").val(), fontVariant = function (t) { switch (t) { case "100": return "Thin 100"; case "100italic": return "Thin 100 Italic"; case "200": return "Extra-light 200"; case "200italic": return "Extra-light 200 Italic"; case "300": return "Light 300"; case "300italic": return "Light 300 Italic"; case "400": case "regular": return "Regular 400"; case "400italic": case "italic": return "Regular 400 Italic"; case "500": return "Medium 500"; case "500italic": return "Meidum 500 Italic"; case "600": return "Semi-Bold 600"; case "600italic": return "Semi-Bold 600 Italic"; case "700": return "Bold 700"; case "700italic": return "Bold 700 Italic"; case "800": return "Extra-Bold 800"; case "800italic": return "Extra-Bold Italic"; case "900": return "Black 900"; case "900italic": return "Black 900 Italic"; case "Not Applicable": return "Not Applicable" } }, loadCustomFont = function (t, e) { newFontFace = Array.isArray(t) ? t[0] : t; for (let t = 0; t < newFontFace.urls.length; t++)if (newFontFace.urls[t].includes("woff")) var n = newFontFace.urls[t]; var a = new FontFace(newFontFace.id, "url(" + n + ")"), i = document.getElementById(e + "-example"), o = document.getElementById("niteoCS-text-logo"); a.load().then(function (t) { document.fonts.add(t), i.style.fontFamily = '"' + t.family + '"', "heading" === e && (o.style.fontFamily = '"' + t.family + '"') }).catch(function (t) { console.log("Cannot load custom font: " + t) }) }; var e = fonts.google.filter(function (t) { return t.id === jQuery(".cmp-coming-soon-maintenance .headings-google-font option:selected").val() }), n = fonts.google.filter(function (t) { return t.id === jQuery(".cmp-coming-soon-maintenance .content-google-font option:selected").val() }); if (e.length) var a = jQuery.map(e[0].variants, function (t) { return { id: t, text: fontVariant(t) } }); if (n.length) var i = jQuery.map(n[0].variants, function (t) { return { id: t, text: fontVariant(t) } }); $HeadingFont = jQuery(".cmp-coming-soon-maintenance .headings-google-font").select2({ data: fonts.google, width: "100%" }), $contentFont = jQuery(".cmp-coming-soon-maintenance .content-google-font").select2({ data: fonts.google, width: "100%" }), $HeadingFontVariant = jQuery(".cmp-coming-soon-maintenance .headings-google-font-variant").select2({ data: a, width: "100%" }), $contentFontVariant = jQuery(".cmp-coming-soon-maintenance .content-google-font-variant").select2({ data: i, width: "100%" }), e.length && ("Not Applicable" == e[0].variants[0] ? loadCustomFont(e, "heading") : (WebFont.load({ google: { families: [e[0].id + ":" + e[0].variants.join(",")], text: "Hello, I am your Headings font!" + jQuery("#niteoCS-text-logo").val() } }), jQuery.isNumeric(headingVariant) ? jQuery("#heading-example").css("font-weight", headingVariant).css("font-style", "normal") : "regular" == headingVariant ? jQuery("#heading-example").css("font-weight", "400").css("font-style", "normal") : "italic" == headingVariant ? jQuery("#heading-example").css("font-style", "italic").css("font-weight", "400") : (fontweight = parseInt(headingVariant, 10), jQuery("#heading-example").css("font-weight", fontweight).css("font-style", "italic")), jQuery("#heading-example, #niteoCS-text-logo").css("font-family", e[0].id))), n.length && ("Not Applicable" == n[0].variants[0] ? loadCustomFont(n, "content") : (WebFont.load({ google: { families: [n[0].id + ":" + n[0].variants.join(",")], text: "And this is a long paragraph. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat." } }), jQuery.isNumeric(contentVariant) ? jQuery("#content-example").css("font-weight", contentVariant).css("font-style", "normal") : "regular" == contentVariant ? jQuery("#content-example").css("font-weight", "400").css("font-style", "normal") : "italic" == contentVariant ? jQuery("#content-example").css("font-style", "italic").css("font-weight", "400") : (fontweight = parseInt(contentVariant, 10), jQuery("#content-example").css("font-weight", fontweight).css("font-style", "italic")), jQuery("#content-example").css("font-family", n[0].id))), t("body").on("mouseenter", ".select2-results__option.select2-results__option--highlighted", function (e) { var n = t(this).data().data, a = n.element.parentNode.dataset.type; if ("content" === a || "heading" === a) { var i = "heading" === a ? "Hello, I am your Headings font!" : "And this is a long paragraph. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."; "Not Applicable" === n.variants[0] ? loadCustomFont(n, a) : WebFont.load({ google: { families: [[n.text] + ":100,200,300,regular,600,700,900,100italic,200italic,300italic,400italic,600italic,700italic,900italic"], text: i }, active: function () { jQuery("#" + a + "-example, #niteoCS-text-logo").css("font-family", n.text) } }) } }), $HeadingFont.on("select2:select", function (t) { var e = $HeadingFontVariant.select2("data"), n = jQuery.map(t.params.data.variants, function (t) { return { id: t, text: fontVariant(t) } }); $HeadingFontVariant.empty(), $HeadingFontVariant.select2({ data: n }), e[0].id && ("-1" == jQuery.inArray(e[0].id, t.params.data.variants) ? jQuery("#heading-example, #niteoCS-text-logo").css("font-weight", "400").css("font-style", "normal") : $HeadingFontVariant.val(e[0].id).trigger("change.select2")) }), $HeadingFontVariant.on("select2:select", function (t) { headingVariant = t.params.data.id, jQuery.isNumeric(headingVariant) ? jQuery("#heading-example, #niteoCS-text-logo").css("font-weight", headingVariant).css("font-style", "normal") : "regular" == headingVariant ? jQuery("#heading-example, #niteoCS-text-logo").css("font-weight", "400").css("font-style", "normal") : "italic" == headingVariant ? jQuery("#heading-example, #niteoCS-text-logo").css("font-style", "italic").css("font-weight", "400") : (fontweight = parseInt(headingVariant, 10), jQuery("#heading-example, #niteoCS-text-logo").css("font-weight", fontweight).css("font-style", "italic")) }), $contentFont.on("select2:select", function (t) { var e = $contentFontVariant.select2("data"), n = jQuery.map(t.params.data.variants, function (t) { return { id: t, text: fontVariant(t) } }); $contentFontVariant.empty(), $contentFontVariant.select2({ data: n }), e[0].id && ("-1" == jQuery.inArray(e[0].id, t.params.data.variants) ? jQuery("#content-example").css("font-weight", "400").css("font-style", "normal") : $contentFontVariant.val(e[0].id).trigger("change.select2")) }), $contentFontVariant.on("select2:select", function (t) { contentVariant = t.params.data.id, jQuery.isNumeric(contentVariant) ? jQuery("#content-example").css("font-weight", contentVariant).css("font-style", "normal") : "regular" == contentVariant ? jQuery("#content-example").css("font-weight", "400").css("font-style", "normal") : "italic" == contentVariant ? jQuery("#content-example").css("font-style", "italic").css("font-weight", "400") : (fontweight = parseInt(contentVariant, 10), jQuery("#content-example").css("font-weight", fontweight).css("font-style", "italic")) }), jQuery(".cmp-coming-soon-maintenance .font-selector input[type=range]").on("input", function () { var t = jQuery(this).data("type"), e = jQuery(this).data("css"), n = jQuery(this).val(); jQuery(this).parent().find("span").html(n), n = "line-height" == e ? n : n + "px", "heading" == t ? jQuery("#heading-example").css(e, n) : jQuery("#content-example").css(e, n) }), jQuery("#cmp-install-font").click(function (e) { var n; e.preventDefault(), t(document.body).on("click", "#cmp-install-font", function (e) { e.preventDefault(); var a = t(this).data("security"), i = { action: "upload_font", files: [] }, o = { action: "cmp_ajax_upload_font", security: a, payload: JSON.stringify(i) }; n ? n.open() : ((n = wp.media.frames.file_frame = wp.media({ multiple: !0 })).on("select", function () { var e = n.state().get("selection").toJSON(); if (e.length) { i.action = "upload_font"; var a = []; jQuery(e).each(function (t, e) { a.indexOf(e.title) < 0 && a.push(e.title) }), jQuery(a).each(function (t, n) { var a = [], o = []; jQuery(e).each(function (t, e) { e.title === n && (a.push(e.url), o.push(e.id)) }), i.files[t] = { id: n, text: n, urls: a, ids: o, variants: ["Not Applicable"] } }), o.payload = JSON.stringify(i), t.post(ajaxurl, o, function (t) { for (var e = 0; e < i.files.length; ++e)fonts.google.unshift(i.files[e]); $HeadingFont.select2({ data: fonts.google }), $contentFont.select2({ data: fonts.google }), alert("Following fonts have been added to Fonts Family selections: " + a.join(", ")) }) } }), n.open()) }) }) });